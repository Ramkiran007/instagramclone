{"version":3,"sources":["components/Navbar.js","components/screens/Home.js","components/screens/Signin.js","components/screens/Profile.js","components/screens/Signup.js","components/screens/Reset.js","components/screens/NewPassword.js","components/screens/UserProfile.js","components/screens/CreatePost.js","reducers/userReducer.js","components/screens/Error.js","components/screens/SearchResult.js","components/screens/Search.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","searchModal","useRef","useState","search","setSearch","userDetails","setUserDetails","useContext","UserContext","state","dispatch","history","useHistory","useEffect","M","Modal","init","current","className","to","id","key","data-target","style","color","onClick","localStorage","clear","type","push","ref","placeholder","value","onChange","e","query","target","fetch","method","headers","body","JSON","stringify","then","res","json","results","user","map","item","_id","getInstance","close","email","Home","data","setData","getItem","result","console","log","posts","src","photo","likes","includes","postId","newData","catch","err","length","title","comments","record","fontWeight","postedBy","name","text","onSubmit","preventDefault","SignIn","password","setPasword","setEmail","test","error","toast","html","classes","setItem","token","payload","Profile","mypics","setPics","image","setImage","mypost","FormData","append","pic","url","maxWidth","margin","borderBottom","display","justifyContent","width","height","borderRadius","file","files","alt","Signup","loading","message","showForm","values","setValues","handleChange","table","Reset","useParams","userProfile","setProfile","userid","following","showfollow","setShowFollow","followers","followId","prevState","unfollowId","newFollower","filter","CreatePost","setTitle","setBody","setUrl","padding","textAlign","postDetails","reducer","action","Error","SearchResult","props","img","Search","setImg","createContext","Routing","parse","location","pathname","startsWith","exact","path","component","Signin","UserProfile","NewPassword","App","useReducer","Provider","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16c8f706.chunk.js","sourcesContent":["  \r\nimport React,{useContext,useRef,useEffect,useState} from 'react'\r\nimport {Link ,useHistory} from 'react-router-dom'\r\nimport {UserContext} from '../App'\r\nimport M from 'materialize-css'\r\nconst NavBar = ()=>{\r\n    const  searchModal = useRef(null)\r\n    const [search,setSearch] = useState('')\r\n    const [userDetails,setUserDetails] = useState([])\r\n     const {state,dispatch} = useContext(UserContext)\r\n     const history = useHistory()\r\n     useEffect(()=>{\r\n         M.Modal.init(searchModal.current)\r\n     },[])\r\n     const renderList = ()=>{\r\n       if(state){\r\n           return [\r\n            <li key=\"1\"><i  data-target=\"modal1\" className=\"large material-icons modal-trigger\" style={{color:\"black\"}}>search</i></li>,\r\n            <li key=\"2\"><Link to=\"/profile\">Profile</Link></li>,\r\n            <li key=\"3\"><Link to=\"/create\">Create Post</Link></li>,\r\n            <li key=\"4\"><Link to=\"/search\">Search for pics</Link></li>,\r\n            <li key=\"5\">\r\n             <button className=\"btn #c62828 red darken-3\"\r\n            onClick={()=>{\r\n              localStorage.clear()\r\n              dispatch({type:\"CLEAR\"})\r\n              history.push('/signin')\r\n            }}\r\n            >\r\n                Logout\r\n            </button>\r\n            </li>\r\n         \r\n            \r\n           ]\r\n       }else{\r\n         return [\r\n          <li  key=\"6\"><Link to=\"/signin\">Signin</Link></li>,\r\n          <li  key=\"7\"><Link to=\"/signup\">Signup</Link></li>\r\n         \r\n         ]\r\n       }\r\n     }\r\n\r\n\r\n     const fetchUsers = (query)=>{\r\n        setSearch(query)\r\n        fetch('/search-users',{\r\n          method:\"post\",\r\n          headers:{\r\n            \"Content-Type\":\"application/json\"\r\n          },\r\n          body:JSON.stringify({\r\n            query\r\n          })\r\n        }).then(res=>res.json())\r\n        .then(results=>{\r\n          setUserDetails(results.user)\r\n        })\r\n     }\r\n    \r\n    return(\r\n        <nav>\r\n        <div className=\"nav-wrapper white\">\r\n          <Link to={state?\"/\":\"/signin\"} className=\"brand-logo left\">Instagram</Link>\r\n          <ul id=\"nav-mobile\" className=\"right\">\r\n             {renderList()}\r\n  \r\n          </ul>\r\n        </div>\r\n        \r\n        <div id=\"modal1\" className=\"modal\" ref={searchModal} style={{color:\"black\"}}>\r\n          <div className=\"modal-content\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"search users\"\r\n            value={search}\r\n            onChange={(e)=>fetchUsers(e.target.value)}\r\n            />\r\n             <ul className=\"collection\">\r\n               {userDetails.map(item=>{\r\n                 return <Link to={item._id !== state._id ? \"/profile/\"+item._id:'/profile'} onClick={()=>{\r\n                   M.Modal.getInstance(searchModal.current).close()\r\n                   setSearch('')\r\n                 }}><li className=\"collection-item\">{item.email}</li></Link> \r\n               })}\r\n               \r\n              </ul>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button className=\"modal-close waves-effect waves-green btn-flat\" onClick={()=>setSearch('')}>close</button>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default NavBar","import React,{useState,useEffect,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\nimport \"../../App.css\"\r\n\r\n\r\nconst Home  = ()=>{\r\n    const [data,setData] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    useEffect(()=>{\r\n       fetch('/allpost',{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setData(result.posts)\r\n       })\r\n    },[])\r\n\r\n    const likePost = (id)=>{\r\n          fetch('/like',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n                   //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n    const unlikePost = (id)=>{\r\n          fetch('/unlike',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n               console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId)=>{\r\n          fetch('/comment',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId,\r\n                  text\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n              console.log(result)\r\n              const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n             })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n\r\n    const deletePost = (postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n   return (\r\n       <div className=\"home\">\r\n           {\r\n               data.map(item=>{\r\n                   return(\r\n                       <div className=\"card home-card\" key={item._id}>\r\n                         \r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                            {item.likes.includes(state._id)\r\n                            ? \r\n                             <i className=\"material-icons\"\r\n                                    onClick={()=>{unlikePost(item._id)}}\r\n                              >thumb_down</i>\r\n                            : \r\n                            <i className=\"material-icons\"\r\n                            onClick={()=>{likePost(item._id)}}\r\n                            >thumb_up</i>\r\n                            }\r\n                            \r\n                           \r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                }}>\r\n                                  <input type=\"text\" placeholder=\"add a comment\" />  \r\n                                </form>\r\n                                \r\n                            </div>\r\n                            \r\n                        </div> \r\n                        \r\n                   )\r\n               })\r\n           }\r\n          \r\n          \r\n       </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Home","import React,{useState,useContext,} from 'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport {UserContext} from '../../App'\r\nimport \"../../App.css\";\r\nimport M from 'materialize-css'\r\nconst SignIn  = ()=>{\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [password,setPasword] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n    const PostData = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n        fetch(\"/signin\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                password,\r\n                email\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n           if(data.error){\r\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n              localStorage.setItem(\"jwt\",data.token)\r\n               localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n               dispatch({type:\"USER\",payload:data.user})\r\n               M.toast({html:\"signedin success\",classes:\"#43a047 green darken-1\"})\r\n               history.push('/')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n   return (\r\n      <div className=\"mycard\">\r\n          <div className=\"card auth-card input-field\">\r\n            <h2>Instagram</h2>\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"email\"\r\n            value={email}\r\n            onChange={(e)=>setEmail(e.target.value)}\r\n            />\r\n            <input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            value={password}\r\n            onChange={(e)=>setPasword(e.target.value)}\r\n            />\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n            onClick={()=>PostData()}\r\n            >\r\n                Login\r\n            </button>\r\n            <h5>\r\n                <Link to=\"/signup\">Dont have an account ?</Link>\r\n            </h5>\r\n            <h6>\r\n                <Link to=\"/reset\">Forgot password ?</Link>\r\n            </h6>\r\n    \r\n        </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default SignIn","import React,{useEffect,useState,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Profile  = ()=>{\r\n    const [mypics,setPics] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const [image,setImage] = useState(\"\")\r\n    useEffect(()=>{\r\n       fetch('/mypost',{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setPics(result.mypost)\r\n       })\r\n    },[])\r\n    useEffect(()=>{\r\n       if(image){\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"insta-clone\")\r\n        data.append(\"cloud_name\",\"instaclone888\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/instaclone888/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n    \r\n       \r\n           fetch('/updatepic',{\r\n               method:\"put\",\r\n               headers:{\r\n                   \"Content-Type\":\"application/json\",\r\n                   \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n               },\r\n               body:JSON.stringify({\r\n                   pic:data.url\r\n               })\r\n           }).then(res=>res.json())\r\n           .then(result=>{\r\n               console.log(result)\r\n               localStorage.setItem(\"user\",JSON.stringify({...state,pic:result.pic}))\r\n               dispatch({type:\"UPDATEPIC\",payload:result.pic})\r\n               //window.location.reload()\r\n           })\r\n       \r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n       }\r\n    },[image])\r\n    const updatePhoto = (file)=>{\r\n        setImage(file)\r\n    }\r\n   return (\r\n       <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n           <div style={{\r\n              margin:\"18px 0px\",\r\n               borderBottom:\"1px solid grey\"\r\n           }}>\r\n\r\n         \r\n           <div style={{\r\n               display:\"flex\",\r\n               justifyContent:\"space-around\",\r\n              \r\n           }}>\r\n               <div>\r\n                   <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n                   src={state?state.pic:\"loading\"}\r\n                   />\r\n                   \r\n                 \r\n               </div>\r\n            \r\n           </div>\r\n           \r\n        \r\n            <div className=\"file-field input-field\" style={{margin:\"10px\"}}>\r\n            <div className=\"btn #64b5f6 blue darken-1\">\r\n                <span>Update pic</span>\r\n                <input type=\"file\" onChange={(e)=>updatePhoto(e.target.files[0])} />\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n            </div>\r\n            </div>\r\n            </div>      \r\n           <div className=\"gallery\">\r\n               {\r\n                   mypics.map(item=>{\r\n                       return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>  \r\n                       )\r\n                   })\r\n               }\r\n\r\n           \r\n           </div>\r\n       </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Profile","import React from \"react\";\r\nimport { useState } from 'react';\r\nimport M from 'materialize-css'\r\nimport {Link, useHistory} from \"react-router-dom\";\r\n \r\n\r\nconst Signup=()=> {\r\n    const history = useHistory();\r\n\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n        loading: false,\r\n        message: '',\r\n        showForm: true\r\n    });\r\n    const { name, email, password, url} = values;\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        console.table({ name, email });\r\n\r\n        fetch(\"/signup\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                pic:url\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n           if(data.error){\r\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n               M.toast({html:data.message,classes:\"#43a047 green darken-1\"})\r\n               history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    const handleChange = name => e => {\r\n        setValues({ ...values, error: false, [name]: e.target.value });\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"mycard\">\r\n           \r\n        <div className=\"card auth-card input-field\">\r\n        <form onSubmit={handleSubmit}\r\n        className = \"home-card\">\r\n            <h2>Instagram</h2>\r\n                <div className = \"mycard\">\r\n                <input\r\n                    value={name}\r\n                    onChange={handleChange('name')}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Type your name\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <input\r\n                    value={email}\r\n                    onChange={handleChange('email')}\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Type your email\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <input\r\n                    value={password}\r\n                    onChange={handleChange('password')}\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Type your password\"\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <button className=\"btn #64b5f6 blue darken-1\">Signup</button>\r\n                <h5>\r\n                <Link to=\"/signin\">Already have an account ?</Link>\r\n            </h5>\r\n            </div>\r\n        </form>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n   ","import React,{useState,useContext,} from 'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nconst Reset  = ()=>{\r\n    const history = useHistory()\r\n    const [email,setEmail] = useState(\"\")\r\n    const PostData = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"invalid email\",classes:\"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n        fetch('/reset-password',{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                email\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n           if(data.error){\r\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n               M.toast({html:data.message,classes:\"#43a047 green darken-1\"})\r\n               history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n   return (\r\n      <div className=\"mycard\">\r\n          <div className=\"card auth-card input-field\">\r\n            <h2>Instagram</h2>\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"email\"\r\n            value={email}\r\n            onChange={(e)=>setEmail(e.target.value)}\r\n            />\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n            onClick={()=>PostData()}\r\n            >\r\n               reset password\r\n            </button>\r\n            \r\n    \r\n        </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Reset","import React,{useState,useContext,} from 'react'\r\nimport {Link,useHistory,useParams} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nconst SignIn  = ()=>{\r\n    const history = useHistory()\r\n    const [password,setPasword] = useState(\"\")\r\n    const {token} = useParams()\r\n    console.log(token)\r\n    const PostData = ()=>{\r\n        fetch(\"/new-password\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                password,\r\n                token\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n           if(data.error){\r\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n\r\n               M.toast({html:data.message,classes:\"#43a047 green darken-1\"})\r\n               history.push('/signin')\r\n\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n   return (\r\n      <div className=\"mycard\">\r\n          <div className=\"card auth-card input-field\">\r\n            <h2>Instagram</h2>\r\n        \r\n            <input\r\n            type=\"password\"\r\n            placeholder=\"enter a new password\"\r\n            value={password}\r\n            onChange={(e)=>setPasword(e.target.value)}\r\n            />\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n            onClick={()=>PostData()}\r\n            >\r\n               Update password\r\n            </button>\r\n    \r\n        </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default SignIn","import React,{useEffect,useState,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {useParams} from 'react-router-dom'\r\nconst Profile  = ()=>{\r\n    const [userProfile,setProfile] = useState(null)\r\n    \r\n    const {state,dispatch} = useContext(UserContext)\r\n    const {userid} = useParams()\r\n    const [showfollow,setShowFollow] = useState(state?!state.following.includes(userid):true)\r\n    useEffect(()=>{\r\n       fetch(`/user/${userid}`,{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           //console.log(result)\r\n         \r\n            setProfile(result)\r\n       })\r\n    },[])\r\n\r\n\r\n    const followUser = ()=>{\r\n        fetch('/follow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                followId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n        \r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n             localStorage.setItem(\"user\",JSON.stringify(data))\r\n             setProfile((prevState)=>{\r\n                 return {\r\n                     ...prevState,\r\n                     user:{\r\n                         ...prevState.user,\r\n                         followers:[...prevState.user.followers,data._id]\r\n                        }\r\n                 }\r\n             })\r\n             setShowFollow(false)\r\n        })\r\n    }\r\n    const unfollowUser = ()=>{\r\n        fetch('/unfollow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                unfollowId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            \r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n             localStorage.setItem(\"user\",JSON.stringify(data))\r\n            \r\n             setProfile((prevState)=>{\r\n                const newFollower = prevState.user.followers.filter(item=>item != data._id )\r\n                 return {\r\n                     ...prevState,\r\n                     user:{\r\n                         ...prevState.user,\r\n                         followers:newFollower\r\n                        }\r\n                 }\r\n             })\r\n             setShowFollow(true)\r\n             \r\n        })\r\n    }\r\n   return (\r\n       <>\r\n       {userProfile ?\r\n       <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n           <div style={{\r\n               display:\"flex\",\r\n               justifyContent:\"space-around\",\r\n               margin:\"18px 0px\",\r\n               borderBottom:\"1px solid grey\"\r\n           }}>\r\n               <div>\r\n                   <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n                   src={userProfile.user.pic}\r\n                   />\r\n               </div>\r\n               <div>\r\n                   <h4>{userProfile.user.name}</h4>\r\n                   <h5>{userProfile.user.email}</h5>\r\n                   <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n                       <h6>{userProfile.posts.length} posts</h6>\r\n                       <h6>{userProfile.user.followers.length} followers</h6>\r\n                       <h6>{userProfile.user.following.length} following</h6>\r\n                   </div>\r\n                   {showfollow?\r\n                   <button style={{\r\n                       margin:\"10px\"\r\n                   }} className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                    onClick={()=>followUser()}\r\n                    >\r\n                        Follow\r\n                    </button>\r\n                    : \r\n                    <button\r\n                    style={{\r\n                        margin:\"10px\"\r\n                    }}\r\n                    className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                    onClick={()=>unfollowUser()}\r\n                    >\r\n                        UnFollow\r\n                    </button>\r\n                    }\r\n                   \r\n                  \r\n\r\n               </div>\r\n           </div>\r\n     \r\n           <div className=\"gallery\">\r\n               {\r\n                   userProfile.posts.map(item=>{\r\n                       return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>  \r\n                       )\r\n                   })\r\n               }\r\n\r\n           \r\n           </div>\r\n       </div>\r\n       \r\n       \r\n       : <h2>loading...!</h2>}\r\n       \r\n       </>\r\n   )\r\n}\r\n\r\n\r\nexport default Profile","import React,{useState,useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nimport M from 'materialize-css'\r\nconst CreatePost = ()=>{\r\n    const history = useHistory()\r\n    const [title,setTitle] = useState(\"\")\r\n    const [body,setBody] = useState(\"\")\r\n    const [image,setImage] = useState(\"\")\r\n    const [url,setUrl] = useState(\"\")\r\n    useEffect(()=>{\r\n       if(url){\r\n        fetch(\"/createpost\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                title,\r\n                body,\r\n                pic:url\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n    \r\n           if(data.error){\r\n              M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n               M.toast({html:\"Created post Successfully\",classes:\"#43a047 green darken-1\"})\r\n               history.push('/')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    },[url])\r\n    \r\n  \r\n   const postDetails = ()=>{\r\n       const data = new FormData()\r\n       data.append(\"file\",image)\r\n       data.append(\"upload_preset\",\"insta-clone\")\r\n       data.append(\"cloud_name\",\"instaclone888\")\r\n       fetch(\" https://api.cloudinary.com/v1_1/instaclone888/image/upload\",{\r\n           method:\"post\",\r\n           body:data\r\n       })\r\n       .then(res=>res.json())\r\n       .then(data=>{\r\n        setUrl(data.url)\r\n    })\r\n       .catch(err=>{\r\n           console.log(err)\r\n       })\r\n\r\n    \r\n   }\r\n \r\n\r\n   return(\r\n       <div className=\"card input-filed\"\r\n       style={{\r\n           margin:\"30px auto\",\r\n           maxWidth:\"500px\",\r\n           padding:\"20px\",\r\n           textAlign:\"center\"\r\n       }}\r\n       >\r\n           <input \r\n           type=\"text\"\r\n            placeholder=\"title\"\r\n            value={title}\r\n            onChange={(e)=>setTitle(e.target.value)}\r\n            />\r\n           <input\r\n            type=\"text\"\r\n             placeholder=\"body\"\r\n             value={body}\r\n            onChange={(e)=>setBody(e.target.value)}\r\n             />\r\n           <div className=\"file-field input-field\">\r\n            <div className=\"btn #64b5f6 blue darken-1\">\r\n                <span>Uplaod Image</span>\r\n                <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n            </div>\r\n            </div>\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n            onClick={()=>postDetails()}\r\n            \r\n            >\r\n                Submit post\r\n            </button>\r\n\r\n       </div>\r\n   )\r\n}\r\n\r\n\r\nexport default CreatePost","\r\nexport const initialState = null\r\n\r\nexport const reducer = (state=initialState,action)=>{\r\n    if(action.type===\"USER\"){\r\n        return action.payload\r\n    }\r\n    if(action.type==\"CLEAR\"){\r\n        return null\r\n    }\r\n    if(action.type==\"UPDATE\"){\r\n        return {\r\n            ...state,\r\n            followers:action.payload.followers,\r\n            following:action.payload.following\r\n        }\r\n    }\r\n    if(action.type==\"UPDATEPIC\"){\r\n        return {\r\n            ...state,\r\n            pic:action.payload\r\n        }\r\n    }\r\n    return state\r\n} ","import React from \"react\";\r\n\r\nconst Error = ()=>{\r\n    return(\r\n\r\n        <>\r\n        <div>\r\n            <h1>\r\n                Oops page not found 404\r\n            </h1>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default Error;","import React from \"react\"\r\n\r\nconst SearchResult = (props)=>{\r\n    const img =  `https://source.unsplash.com/600x400/?${props.name}`\r\nreturn (\r\n    <>\r\n    <div>\r\n        <img src ={img} alt  = \"search\"/>\r\n    </div>\r\n    </>\r\n)\r\n\r\n\r\n}\r\nexport default SearchResult;","import React, { useState } from \"react\";\r\nimport SearchResult from \"./SearchResult\"\r\nimport \"../../App.css\"\r\nconst Search  = ()=>{\r\n    const [img, setImg] = useState('');\r\n\r\n    const inputValue = (e)=>{\r\n        const data = e.target.value\r\n        setImg(data)\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div className = \"topnav\">\r\n<input type = \"text\" placeholder = \"search the pic you want\" value={img} \r\nonChange={inputValue}/>\r\n{img===\"\"?\"\":<SearchResult name = {img}/>}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default Search;","import React,{useEffect,createContext,useReducer,useContext} from 'react';\nimport NavBar from './components/Navbar'\nimport \"./App.css\"\n\nimport {BrowserRouter, Switch, Route, useHistory} from 'react-router-dom';\nimport Home from './components/screens/Home'\nimport Signin from './components/screens/Signin'\nimport Profile from './components/screens/Profile'\nimport Signup from './components/screens/Signup'\nimport Reset from './components/screens/Reset'\nimport NewPassword from './components/screens/NewPassword'\nimport UserProfile from './components/screens/UserProfile'\nimport CreatePost from './components/screens/CreatePost'\nimport {reducer,initialState} from './reducers/userReducer'\nimport Error from './components/screens/Error' \nimport Search from './components/screens/Search'\nimport SearchResult from './components/screens/SearchResult'\n\nexport const UserContext = createContext()\n\n\n\nconst Routing = ()=>{\n  const history = useHistory()\n  const {state,dispatch} = useContext(UserContext)\n  useEffect(()=>{\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    if(user){\n      dispatch({type:\"USER\",payload:user})\n    }else{\n      if(!history.location.pathname.startsWith('/reset'))\n           history.push('/signin')\n    }\n  },[]) \n   return (\n    <>\n    <Switch>\n   \n      <Route exact path = \"/\" component={Home}/>\n      <Route  path =\"/signup\" component={Signup}/>\n      <Route  path =\"/signin\" component={Signin}/>\n      <Route exact path =\"/profile\" component={Profile}/>\n      <Route path=\"/profile/:userid\" component={UserProfile}/>\n      <Route exact path =\"/reset\" component={Reset}/>\n      <Route  path =\"/reset/:token\" component={NewPassword}/>\n      <Route  path = \"/create\"  component ={CreatePost}></Route>\n      <Route path = \"/search\"   component = {Search}></Route>\n\n      <Route exact component ={Error}/>\n\n    </Switch>\n    </>\n  );\n}\n\n\n\n\nfunction App() {\n  const [state,dispatch] = useReducer(reducer,initialState)\n  return (\n    <UserContext.Provider value={{state,dispatch}}>\n    <BrowserRouter>\n      <NavBar />\n      <Routing />\n      \n    </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}